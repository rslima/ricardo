# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Build image
      run: mvn spring-boot:build-image
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Push image
      run: docker push rslima/ricardo:latest
    - name: Setup Kubectl
      uses: azure/setup-kubectl@v4
    - name: setup kube config
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config
        mkdir -p ~/.kube/.minikube/profiles/minikube
        echo "${{ secrets.KUBE_CA_CRT }}" > ~/.kube/.minikube/ca.crt
        echo "${{ secrets.KUBE_CLIENT_CRT }}" > ~/.kube/.minikube/profiles/minikube/client.crt
        echo "${{ secrets.KUBE_CLIENT_KEY }}" > ~/.kube/.minikube/profiles/minikube/client.key
    - name: deploy image to cluster
      run: kubectl apply -f k8s/ricardo-deployment.yaml
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
